{"version":3,"sources":["components/AboutMe.js","components/Portfolio.js","components/MainContent.js","components/Navbar.js","components/MidContent.js","App.js","serviceWorker.js","index.js"],"names":["header","Container","id","Row","Col","Image","src","roundedCircle","fluid","effectphrase","text","className","href","target","rel","renderIcon","icon","Provider","value","size","AboutMe","Portfolio","props","getCategories","categories","projects","map","project","type","sort","forEach","category","includes","push","updateState","e","setState","category_chosen","buildPortfolioHeader","Form","Group","as","controlId","Label","Control","onChange","compareProjectNames","project1","project2","name","buildPortfolioGrid","CardColumns","filter","state","renderProjectCard","role","Badge","variant","cardImg","thumbPath","Card","Img","quoteFooter","prizes","Footer","Body","Title","link","class","Text","description","technologies","reduce","e1","e2","_","render","React","Component","contents","ABOUT_ME","PORTFOLIO","MainContent","this","content","getHeaderContent","verticalAlign","getBodyContent","getHeader","getBody","Navbar","copiedToClipboardText","expand","fixed","Brand","Toggle","aria-controls","Collapse","Nav","navbar","fill","Link","onClick","handleClick","renderCopiableSocialIcon","renderClickableSocialIcon","color","copyToClipboardText","overlayText","OverlayTrigger","placement","delay","show","hide","overlay","UpdatableTooltip","copyAndUpdateState","copyToClipboard","textArea","document","createElement","style","position","body","appendChild","focus","select","execCommand","removeChild","forwardRef","ref","scheduleUpdate","children","useEffect","Tooltip","buildMultiColorText","colors","result","i","length","MidContent","gameProgrammerText","options","strings","autoStart","loop","App","mainContent","bind","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b0f92e7f.chunk.js","sourcesContent":["import React from 'react'\r\nimport './AboutMe.scss'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport { Image } from 'react-bootstrap'\r\nimport { IconContext } from 'react-icons'\r\nimport { GiWyvern, GiCapricorn, GiMusicSpell, GiComputing, GiCaesar } from 'react-icons/gi'\r\n\r\nconst AboutMe = () => {\r\n    return (\r\n        <Container className=\"main-content-body\">\r\n            {header()}\r\n            {effectphrase()}\r\n            {text()}\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst header = () => {\r\n    return (\r\n        <Container id=\"my-photos-header\">\r\n            <Row>\r\n                <Col />\r\n                <Col>\r\n                    <Image src=\"./assets/me.jpg\" roundedCircle fluid />\r\n                </Col>\r\n                <Col>\r\n                    <Image src=\"./assets/me2.jpg\" roundedCircle fluid />\r\n                </Col>\r\n                <Col>\r\n                    <Image src=\"./assets/me3.jpg\" roundedCircle fluid />\r\n                </Col>\r\n                <Col />\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst effectphrase = () => {\r\n    return (\r\n        <Container id=\"effect-phrase\">\r\n            <h1><q>Tutte le strade portano al circo</q></h1>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst text = () => {\r\n    return (\r\n        <Container id=\"text\">\r\n            <Row>\r\n                <Col className=\"col-md-10\">\r\n                    <p>\r\n                        The phrase above is one of the frequent-non-sense-out-of-context catch phrases people put on their social media, and it's the one I put on mine. I saw it for the first time\r\n                        in <a href=\"https://store.playstation.com/pt-br/product/UP9000-NPUA80719_00-RAIN000000000001\" target=\"_blank\" rel=\"noopener noreferrer\">Rain</a>, an awesome <i>art game</i> released in 2013.\r\n                        The context of this phrase was reaching a circus through some multiple paths that you had to choose which to follow (but then, <q><i>all of the paths lead to the circus</i></q>), but I try to think this phrase as <q>follow your objectives, you'll get there</q> or <q>life is too short, why bothering with this</q>, and that's how I try to see life.\r\n                    </p>\r\n                    <p>\r\n                        But who the hell is <q>I</q>? My full name is <b>João Victor de Sá Ferraz Coutinho</b>, born on 01/18/1998 at a cold city from the interior of Pernambuco, Brazil.\r\n                        I define myself as a very <b>chill</b>, <b>focused</b> and <b>charismatic</b> person. The things I love to do include:\r\n                        <ul>\r\n                            <li><b>Playing games</b> I have a special affection for <i>art games</i>, like <a href=\"https://thatgamecompany.com/journey/\" target=\"_blank\" rel=\"noopener noreferrer\">Journey</a>, <a href=\"https://nomada.studio/\" target=\"_blank\" rel=\"noopener noreferrer\">Gris</a> and <a href=\"https://abzugame.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Abzû</a>, but I also enjoy some casual <a href=\"https://br.leagueoflegends.com/pt/\" target=\"_blank\" rel=\"noopener noreferrer\">League of Legends</a> (best\r\n                            Ashe/Sivir/mid Morgana from my neighbourhood) and <a href=\"https://br.leagueoflegends.com/pt/featured/events/teamfight-tactics\" target=\"_blank\" rel=\"noopener noreferrer\">Teamfight Tactics</a>, and some dramatic AAAs (<a href=\"https://www.thelastofus.playstation.com/\" target=\"_blank\" rel=\"noopener noreferrer\">The Last Of Us</a>, <a href=\"https://www.quanticdream.com/en/beyond-two-souls\" target=\"_blank\" rel=\"noopener noreferrer\">Beyond: Two Souls</a>...).\r\n                            </li>\r\n                            <li><b>Watching series, cartoons and animes</b> <i>El Psy Congroo.</i>/<i>For the Honor of Grayskull!</i></li>\r\n                            <li><b>Listening to music</b> From indie to pop, from lo-fi to funk, I like them all (except for hard metal, really sorry).</li>\r\n                            <li><b>Meeting friends</b> Drinking beer and talking to friends after a tiring week is indescribable.</li>\r\n                            <li><b>Coding</b> I do magic with Java and OOs, but functional and scripting programming will be in my heart for eternity. Also, it's always enjoyful solving a problem with a clean and concise code (and some good automatized tests).</li>\r\n                        </ul>\r\n                    </p>\r\n                    <p>\r\n                        The last item is specially important because I don't code only for fun, but professionally as well. Currently I'm undergraduating <b>Computer Science</b> at <b>Federal University of Pernambuco (UFPE)</b>,\r\n                        with good knowledge and contributions of mine in <b>game development</b>, <b>software enginnering</b>, <b>computer graphics</b>, <b>artificial intelligence</b> and <b>mathematical logic and computation</b>,\r\n                        areas that I have fascination. I plan to finish the course in late 2020.\r\n                    </p>\r\n                    <p>\r\n                        I also have good communication skills (I love teaching!), being able to say what I'm thinking in a clear way, and good team work principles (integrating the base or leading).\r\n                    </p>\r\n                </Col>\r\n                <Col className=\"d-none d-sm-none d-md-block\">\r\n                    <p>\r\n                        {renderIcon(<GiWyvern />)}\r\n                    </p>\r\n                    <p>\r\n                        {renderIcon(<GiCapricorn />)}\r\n                    </p>\r\n                    <p>\r\n                        {renderIcon(<GiMusicSpell />)}\r\n                    </p>\r\n                    <p>\r\n                        {renderIcon(<GiComputing />)}\r\n                    </p>\r\n                    <p>\r\n                        {renderIcon(<GiCaesar />)}\r\n                    </p>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst renderIcon = icon => {\r\n    return (\r\n        <IconContext.Provider value={{\r\n            size: \"100px\"\r\n        }}>\r\n            {icon}\r\n        </IconContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AboutMe","import React from 'react'\r\nimport { Container, Card, Col, Form, CardColumns, Badge } from 'react-bootstrap'\r\nimport projects from '../projects.json'\r\nimport './Portfolio.scss'\r\n\r\nexport default class Portfolio extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            category_chosen: \"All categories\"\r\n        }\r\n    }\r\n\r\n    getCategories = () => {\r\n        let categories = []\r\n        projects\r\n            .map(project => project.type)\r\n            .sort()\r\n            .forEach(category => {\r\n                if (!categories.includes(category))\r\n                    categories.push(category)\r\n            })\r\n        return categories.map(category => <option>{category}</option>)\r\n    }\r\n\r\n    updateState = e => {\r\n        this.setState({\r\n            category_chosen: e.target.value\r\n        })\r\n    }\r\n\r\n    buildPortfolioHeader = () => {\r\n        return (\r\n            <Container id=\"portfolio-header\">\r\n                <Form>\r\n                    <Form.Row className=\"justify-content-center\">\r\n                        <Form.Group as={Col} controlId=\"formGridState\" className=\"col-md-auto\">\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control as=\"select\" className=\"custom-select-lg\" onChange={this.updateState}>\r\n                                <option>All categories</option>\r\n                                {this.getCategories()}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                </Form>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n    compareProjectNames = (project1, project2) => {\r\n        if (project1.name < project2.name) {\r\n            return -1\r\n        } else if (project1.name === project2.name) {\r\n            return 0\r\n        } else {\r\n            return 1\r\n        }\r\n    }\r\n\r\n    buildPortfolioGrid = () => {\r\n        return (\r\n            <CardColumns className=\"portfolio-section\">\r\n                {\r\n                    projects\r\n                        .sort(this.compareProjectNames)\r\n                        .filter(project => project.type === this.state.category_chosen || this.state.category_chosen === \"All categories\")\r\n                        .map(project => this.renderProjectCard(project))\r\n                }\r\n            </CardColumns>\r\n        )\r\n    }\r\n\r\n    renderProjectCard = project => {\r\n        let role = project.role == null ? null : <Badge variant=\"secondary\">{project.role}</Badge>\r\n        let cardImg = project.thumbPath == null ? null : <Card.Img variant=\"top\" src={project.thumbPath} />\r\n        let quoteFooter = project.prizes == null ? null : <Card.Footer className=\"blockquote-footer\">{project.prizes}</Card.Footer>\r\n        return (\r\n            <Card>\r\n                {cardImg}\r\n                <Card.Body>\r\n                    <Card.Title><a href={project.link} class=\"stretched-link card-link\" target=\"_blank\" rel=\"noopener noreferrer\">{project.name}</a> {role}</Card.Title>\r\n                    <Card.Text class=\"project-card-text\">\r\n                        <p>{project.description}</p>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n                {quoteFooter}\r\n                <Card.Footer className=\"text-muted\">{project.technologies.reduce((e1, e2, _) => e1 + \" + \" + e2)}</Card.Footer>\r\n            </Card >\r\n        )\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <Container className=\"main-content-body\">\r\n                {this.buildPortfolioHeader()}\r\n                {this.buildPortfolioGrid()}\r\n            </Container>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport './MainContent.scss'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport { GiArcher, GiSpellBook } from 'react-icons/gi'\r\nimport { IconContext } from 'react-icons'\r\nimport AboutMe from './AboutMe'\r\nimport Portfolio from './Portfolio'\r\n\r\nconst contents = {\r\n    ABOUT_ME: 'about',\r\n    PORTFOLIO: 'portfolio'\r\n}\r\n\r\nclass MainContent extends React.Component {\r\n\r\n    getHeaderContent() {\r\n        let text\r\n        let icon\r\n        switch (this.props.content) {\r\n            case contents.ABOUT_ME:\r\n                text = 'About me'\r\n                icon = <GiArcher />\r\n                break\r\n            default:\r\n                text = 'Portfolio'\r\n                icon = <GiSpellBook />\r\n                break\r\n        }\r\n        return { text, icon }\r\n    }\r\n\r\n\r\n    getHeader() {\r\n        let { text, icon } = this.getHeaderContent()\r\n        return (\r\n            <Container id=\"main-content-header\">\r\n                <Row className=\"align-items-center\">\r\n                    <Col className=\"col-auto\">\r\n                        <IconContext.Provider value={{\r\n                            size: \"40px\", verticalAlign: 'middle'\r\n                        }}>\r\n                            <div>\r\n                                {icon}\r\n                            </div>\r\n                        </IconContext.Provider>\r\n                    </Col>\r\n                    <Col className=\"mx-md-n3\">\r\n                        <span id={this.props.content}>{text}</span>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n    getBodyContent() {\r\n        switch (this.props.content) {\r\n            case contents.ABOUT_ME:\r\n                return <AboutMe />\r\n            default:\r\n                return <Portfolio />\r\n        }\r\n    }\r\n\r\n    getBody() {\r\n        return (\r\n            <Container id=\"main-content-body\">\r\n                {this.getBodyContent()}\r\n            </Container>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container id=\"main-content\">\r\n                {this.getHeader()}\r\n                {this.getBody()}\r\n            </Container>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    MainContent, contents\r\n}","import React, { useEffect } from 'react'\r\nimport BNavbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Container from 'react-bootstrap/Container'\r\nimport './Navbar.scss'\r\nimport { FaLinkedin, FaFacebook, FaTwitter, FaGithub, FaEnvelope, FaWhatsapp } from 'react-icons/fa'\r\nimport { IconContext } from \"react-icons\";\r\nimport { contents } from './MainContent'\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\r\n\r\nexport default class Navbar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            copiedToClipboardText: \"\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <BNavbar id=\"navbar\" variant=\"dark\" expand=\"md\" fixed=\"top\">\r\n                <Container>\r\n                    <BNavbar.Brand href=\"#home\" id=\"brand\">João Coutinho</BNavbar.Brand>\r\n                    <BNavbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <BNavbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Container className=\"justify-content-end\">\r\n                            <Nav navbar fill>\r\n                                <Nav.Link className=\"navbar-item\" onClick={() => this.props.handleClick(contents.ABOUT_ME)} href=\"#about\">About me</Nav.Link>\r\n                                <Nav.Link className=\"navbar-item\" onClick={() => this.props.handleClick(contents.PORTFOLIO)} href=\"#portfolio\">Portfolio</Nav.Link>\r\n                                {this.renderCopiableSocialIcon(\"jvsfc@cin.ufpe.br\", <FaEnvelope />)}\r\n                                {this.renderCopiableSocialIcon(\"+5587996834996\", <FaWhatsapp />)}\r\n                                {this.renderClickableSocialIcon(\"https://fb.com/jvcoutinho13\", <FaFacebook />)}\r\n                                {this.renderClickableSocialIcon(\"https://twitter.com/jvcoutinho15\", <FaTwitter />)}\r\n                                {this.renderClickableSocialIcon(\"https://github.com/jvcoutinho\", <FaGithub />)}\r\n                                {this.renderClickableSocialIcon(\"https://linkedin.com/in/jo%C3%A3o-victor-de-s%C3%A1-ferraz-coutinho-886944b5/\", <FaLinkedin />)}\r\n                            </Nav>\r\n                        </Container>\r\n                    </BNavbar.Collapse>\r\n                </Container>\r\n            </BNavbar>\r\n        )\r\n    }\r\n\r\n    renderClickableSocialIcon(link, icon) {\r\n        return (\r\n            <Nav.Link target=\"_blank\" className=\"navbar-item\" href={link}>\r\n                <IconContext.Provider value={{\r\n                    color: \"#007eb3\", size: \"20px\"\r\n                }}>\r\n                    {icon}\r\n                </IconContext.Provider>\r\n            </Nav.Link>\r\n        )\r\n    }\r\n\r\n    renderCopiableSocialIcon(copyToClipboardText, icon) {\r\n        let overlayText = this.state.copiedToClipboardText === copyToClipboardText ? \"Copied!\" : (\"Copy \" + copyToClipboardText + \" to clipboard\")\r\n        return (\r\n            <OverlayTrigger placement=\"bottom\" delay={{ show: 100, hide: 200 }} overlay={<UpdatableTooltip>{overlayText}</UpdatableTooltip>}>\r\n                <Nav.Link target=\"_blank\" className=\"navbar-item\" onClick={() => this.copyAndUpdateState(copyToClipboardText)}>\r\n                    <IconContext.Provider value={{\r\n                        color: \"#007eb3\", size: \"20px\"\r\n                    }}>\r\n                        {icon}\r\n                    </IconContext.Provider>\r\n                </Nav.Link>\r\n\r\n            </OverlayTrigger >\r\n        )\r\n    }\r\n\r\n    copyAndUpdateState(copyToClipboardText) {\r\n        this.copyToClipboard(copyToClipboardText)\r\n        this.setState({\r\n            copiedToClipboardText: copyToClipboardText\r\n        })\r\n    }\r\n\r\n    copyToClipboard(text) {\r\n        let textArea = document.createElement(\"textarea\");\r\n        textArea.value = text;\r\n        textArea.style.position = \"fixed\";  //avoid scrolling to bottom\r\n        document.body.appendChild(textArea);\r\n        textArea.focus();\r\n        textArea.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(textArea);\r\n    }\r\n}\r\n\r\nconst UpdatableTooltip = React.forwardRef(({ scheduleUpdate, children, ...props }, ref) => {\r\n    useEffect(() => {\r\n        scheduleUpdate()\r\n    }, [children, scheduleUpdate])\r\n    return <Tooltip ref={ref} {...props}>{children}</Tooltip>\r\n})","import React from 'react'\r\nimport './MidContent.scss'\r\nimport Typewriter from 'typewriter-effect'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nconst MidContent = () => {\r\n    let gameProgrammerText = buildMultiColorText('Game', [\"#05e9e8\", \"#ff890b\", \"#dc80b1\", \"#e91313\"]) + ' Programmer'\r\n\r\n    return (\r\n        <Container id=\"mid-content\">\r\n            <h1 className=\"display-4\">Hi there, I'm João</h1>\r\n            <Typewriter\r\n                options={{\r\n                    strings: [gameProgrammerText, 'Software Engineer'],\r\n                    autoStart: true,\r\n                    loop: true\r\n                }} />\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst buildMultiColorText = (text, colors) => {\r\n    let result = ''\r\n    for (let i = 0; i < text.length; i++) {\r\n        result += \"<span style='color: \" + colors[i % colors.length] + \";'>\" + text[i] + \"</span>\"\r\n    }\r\n    return result\r\n}\r\n\r\nexport default MidContent","import React from 'react'\r\nimport './App.css'\r\nimport Navbar from './components/Navbar'\r\nimport MidContent from './components/MidContent'\r\nimport { MainContent, contents } from './components/MainContent'\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      mainContent: contents.ABOUT_ME\r\n    }\r\n    this.handleClick = this.handleClick.bind(this)\r\n  }\r\n\r\n  handleClick(content) {\r\n    this.setState({\r\n      mainContent: content\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar handleClick={this.handleClick} />\r\n        <MidContent />\r\n        <MainContent content={this.state.mainContent} />\r\n      </div >\r\n    )\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}